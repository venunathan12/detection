[
    "builtin://*",
    {
        "id": "TestNumberRestrictedNonNull1",
        "type": {
            "id":"NumberRestricted",
            "args": {
                "nullable": false,
                "lowerbound": null,
                "upperbound": null,
                "isquantized": true
            }
        }
    },
    {
        "id": "TestNumberRestrictedNullable1",
        "type": {
            "id":"NumberRestricted",
            "args": {
                "nullable": true,
                "lowerbound": null,
                "upperbound": null,
                "isquantized": true
            }
        }
    },
    {
        "id": "TestNumberRestrictedNonNull2",
        "type": {
            "id":"NumberRestricted",
            "args": {
                "nullable": false,
                "lowerbound": 0,
                "upperbound": 1,
                "isquantized": false
            }
        }
    },
    {
        "id": "TestNumberRestrictedNullable2",
        "type": {
            "id":"NumberRestricted",
            "args": {
                "nullable": true,
                "lowerbound": 0,
                "upperbound": 1,
                "isquantized": false
            }
        }
    },
    {
        "id": "TestNumberRestrictedNonNull3",
        "type": {
            "id":"NumberRestricted",
            "args": {
                "nullable": false,
                "lowerbound": 1,
                "upperbound": 10,
                "isquantized": true
            }
        }
    },
    {
        "id": "TestNumberRestrictedNullable3",
        "type": {
            "id":"NumberRestricted",
            "args": {
                "nullable": true,
                "lowerbound": 1,
                "upperbound": 10,
                "isquantized": true
            }
        }
    },
    {
        "id": "TestStringEnumNonNull",
        "type": {
            "id": "StringEnum",
            "args": {
                "nullable": false,
                "options": ["TRUE", "FALSE"]
            }
        }
    },
    {
        "id": "TestStringEnumNullable",
        "type": {
            "id": "StringEnum",
            "args": {
                "nullable": true,
                "options": ["TRUE", "FALSE"]
            }
        }
    },
    {
        "id": "TestStringRestrictedDefault",
        "type": {
            "id": "StringRestricted"
        }
    },
    {
        "id": "TestStringRestrictedLengthBounded",
        "type": {
            "id": "StringRestricted",
            "args": {
                "minlength": 4,
                "maxlength": 8
            }
        }
    },
    {
        "id": "TestStringRestrictedNums",
        "type": {
            "id": "StringRestricted",
            "args": {
                "minlength": 1,
                "allowlowercase": false,
                "allowuppercase": false,
                "allownumeric": true,
                "allowedspecials": [","]
            }
        }
    },
    {
        "id": "TestStringRestrictedHeadline",
        "type": {
            "id": "StringRestricted",
            "args": {
                "minlength": 1,
                "allowlowercase": false,
                "allowuppercase": true,
                "allownumeric": false,
                "allowedspecials": ["-"]
            }
        }
    },
    {
        "id": "TestStringRestrictedSentence",
        "type": {
            "id": "StringRestricted",
            "args": {
                "allowlowercase": true,
                "allowuppercase": true,
                "allownumeric": false,
                "allowedspecials": [" "]
            }
        }
    },
    {
        "id": "TestStringRestrictedAlgebra",
        "type": {
            "id": "StringRestricted",
            "args": {
                "minlength": 1,
                "allowlowercase": true,
                "allowuppercase": false,
                "allownumeric": true,
                "allowedspecials": ["+", "-", "*", "/", "="]
            }
        }
    },
    {
        "id": "TestStringRegexNonNull",
        "type": {
            "id": "StringRegex",
            "args": {
                "nullable": false,
                "regex": "^[0-9]+$"
            }
        }
    },
    {
        "id": "TestStringRegexNullable",
        "type": {
            "id": "StringRegex",
            "args": {
                "nullable": true,
                "regex": "^[0-9]+$"
            }
        }
    },
    {
        "id": "Vector3Normalized",
        "type": {
            "id": "List",
            "args": {
                "nullable": false,
                "itemtype": {
                    "type": "NumberRestricted",
                    "args": {
                        "nullable": false,
                        "lowerbound": -1,
                        "upperbound": 1,
                        "isquantized": false
                    }
                }
            }
        },
        "assertions": [
            "return X.length == 3;",
            "return Math.abs(X.map(x => x*x).reduce((a, x) => a + x, 0) - 1) < 0.01;"
        ]
    },
    {
        "id": "DateString",
        "type": {
            "id": "StringRegex",
            "args": {
                "nullable": false,
                "regex": "^([0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}(:[0-9]{2}(\\.[0-9]{3})?)?(Z)?)|([0-9]+ [a-zA-Z]+ [0-9]+ [0-9]{2}:[0-9]{2}(:[0-9]{2}(\\.[0-9]{3})?)?( [A-Z]+)?( [A-Z]+)?)$"
            }
        },
        "assertions": [
            "return Number.isNaN(Date.parse(X)) === false;"
        ]
    },
    {
        "id": "DateStringListUnique",
        "type": {
            "id": "Set",
            "args": {
                "nullable": false,
                "itemtype": {
                    "type": "DateString"
                },
                "identifier": "return Date.parse(x);"
            }
        }
    },
    {
        "id": "UnionStringRegex",
        "type": {
            "id": "Union",
            "args": {
                "nullable": false,
                "subtypes": [
                    {
                        "type": "StringRegex",
                        "args": { "nullable": false, "regex": "^[0-9]{4}\\-" }
                    },
                    {
                        "type": "StringRegex",
                        "args": { "nullable": false, "regex": "\\-[0-9]{4}$" }
                    }
                ]
            }
        }
    },
    {
        "id": "IntersectionStringRegex",
        "type": {
            "id": "Intersection",
            "args": {
                "nullable": false,
                "subtypes": [
                    {
                        "type": "StringRegex",
                        "args": { "nullable": false, "regex": "^[0-9]{4}\\-" }
                    },
                    {
                        "type": "StringRegex",
                        "args": { "nullable": false, "regex": "\\-[0-9]{4}$" }
                    }
                ]
            }
        }
    }
]